{
    "content": "<p>You are given an integer array <code>height</code> of length <code>n</code>. There are <code>n</code> vertical lines drawn such that the two endpoints of the <code>i<sup>th</sup></code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.</p>\n\n<p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p>\n\n<p>Return <em>the maximum amount of water a container can store</em>.</p>\n\n<p><strong>Notice</strong> that you may not slant the container.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg\" style=\"width: 600px; height: 287px;\" />\n<pre>\n<strong>Input:</strong> height = [1,8,6,2,5,4,8,3,7]\n<strong>Output:</strong> 49\n<strong>Explanation:</strong> The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> height = [1,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == height.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= height[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "topicTags": [
        {
            "name": "Array"
        },
        {
            "name": "Two Pointers"
        },
        {
            "name": "Greedy"
        }
    ],
    "solution": {
        "content": null
    },
    "content_md": "You are given an integer array `height` of length `n`. There are `n` vertical lines drawn such that the two endpoints of the `ith` line are `(i, 0)` and `(i, height[i])`.\n\n\nFind two lines that together with the x\\-axis form a container, such that the container contains the most water.\n\n\nReturn *the maximum amount of water a container can store*.\n\n\n**Notice** that you may not slant the container.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n![](https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg)\n\n```\n\nInput: height = [1,8,6,2,5,4,8,3,7]\nOutput: 49\nExplanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n\n```\n\n**Example 2:**\n\n\n\n```\n\nInput: height = [1,1]\nOutput: 1\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `n == height.length`\n* `2 <= n <= 105`\n* `0 <= height[i] <= 104`\n\n\n",
    "solution_md": null,
    "prep_code": "from typing import List\n\n\nclass Solution:\n    def maxArea(self, height: List[int]) -> int:\n",
    "test_code": "import unittest\nimport hypothesis.strategies as st\nfrom hypothesis import given\n\n\nclass Test(unittest.TestCase):\n    def test_1(self):\n        solution = Solution()\n        self.assertEqual(solution.maxArea([1, 8, 6, 2, 5, 4, 8, 3, 7]), 49)\n\n    def test_2(self):\n        solution = Solution()\n        self.assertEqual(solution.maxArea([1, 1]), 1)\n\n    def test_3(self):\n        solution = Solution()\n        self.assertEqual(solution.maxArea([4, 3, 2, 1, 4]), 16)\n\n    def test_4(self):\n        solution = Solution()\n        self.assertEqual(solution.maxArea([1, 2, 1]), 2)\n\n    @given(st.lists(st.integers(min_value=0), min_size=2))\n    def test_random(self, height):\n        solution = Solution()\n        self.assertEqual(solution.maxArea(height), solution.maxAreaNaive(height))\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
}