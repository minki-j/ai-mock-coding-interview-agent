{
    "content": "<p>Given a string <code>s</code>, find the length of the <strong>longest</strong> <span data-keyword=\"substring-nonempty\"><strong>substring</strong></span> without repeating characters.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabcbb&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;abc&quot;, with the length of 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbbbb&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The answer is &quot;b&quot;, with the length of 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pwwkew&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;wke&quot;, with the length of 3.\nNotice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of English letters, digits, symbols and spaces.</li>\n</ul>\n",
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "topicTags": [
        {
            "name": "Hash Table"
        },
        {
            "name": "String"
        },
        {
            "name": "Sliding Window"
        }
    ],
    "solution": {
        "content": null
    },
    "content_md": "Given a string `s`, find the length of the **longest** **substring** without repeating characters.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\nInput: s = \"abcabcbb\"\nOutput: 3\nExplanation: The answer is \"abc\", with the length of 3.\n\n```\n\n**Example 2:**\n\n\n\n```\n\nInput: s = \"bbbbb\"\nOutput: 1\nExplanation: The answer is \"b\", with the length of 1.\n\n```\n\n**Example 3:**\n\n\n\n```\n\nInput: s = \"pwwkew\"\nOutput: 3\nExplanation: The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `0 <= s.length <= 5 * 104`\n* `s` consists of English letters, digits, symbols and spaces.\n\n\n",
    "solution_md": null,
    "prep_code": "class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n",
    "test_code": "import unittest\n\n\nclass Test(unittest.TestCase):\n    def test_1(self):\n        solution = Solution()\n        self.assertEqual(solution.lengthOfLongestSubstring(\"abcabcbb\"), 3)\n\n    def test_2(self):\n        solution = Solution()\n        self.assertEqual(solution.lengthOfLongestSubstring(\"dvdf\"), 3)\n\n    def test_3(self):\n        solution = Solution()\n        self.assertEqual(solution.lengthOfLongestSubstring(\"aabaab!bb\"), 3)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
}