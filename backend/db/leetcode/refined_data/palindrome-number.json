{
    "content": "<p>Given an integer <code>x</code>, return <code>true</code><em> if </em><code>x</code><em> is a </em><span data-keyword=\"palindrome-integer\"><em><strong>palindrome</strong></em></span><em>, and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 121\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 121 reads as 121 from left to right and from right to left.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = -121\n<strong>Output:</strong> false\n<strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup>&nbsp;&lt;= x &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without converting the integer to a string?",
    "difficulty": "Easy",
    "title": "Palindrome Number",
    "topicTags": [
        {
            "name": "Math"
        }
    ],
    "solution": {
        "content": null
    },
    "content_md": "Given an integer `x`, return `true` *if* `x` *is a* ***palindrome****, and* `false` *otherwise*.\n\n\n\u00a0\n\n\n**Example 1:**\n\n\n\n```\n\nInput: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.\n\n```\n\n**Example 2:**\n\n\n\n```\n\nInput: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n\n```\n\n**Example 3:**\n\n\n\n```\n\nInput: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n\n```\n\n\u00a0\n\n\n**Constraints:**\n\n\n* `-231\u00a0<= x <= 231\u00a0- 1`\n\n\n\u00a0\n\n\n**Follow up:** Could you solve it without converting the integer to a string?",
    "solution_md": null,
    "prep_code": "class Solution:\n    def isPalindrome(self, x: int) -> bool:\n",
    "test_code": "import unittest\n\n\nclass Test(unittest.TestCase):\n    def test_1(self):\n        solution = Solution()\n        self.assertEqual(solution.isPalindrome(121), True)\n\n    def test_2(self):\n        solution = Solution()\n        self.assertEqual(solution.isPalindrome(-121), False)\n\n    def test_3(self):\n        solution = Solution()\n        self.assertEqual(solution.isPalindrome(10), False)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n"
}