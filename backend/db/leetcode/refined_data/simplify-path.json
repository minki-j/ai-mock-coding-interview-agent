{
  "content": "<p>You are given an <em>absolute</em> path for a Unix-style file system, which always begins with a slash <code>&#39;/&#39;</code>. Your task is to transform this absolute path into its <strong>simplified canonical path</strong>.</p>\n\n<p>The <em>rules</em> of a Unix-style file system are as follows:</p>\n\n<ul>\n\t<li>A single period <code>&#39;.&#39;</code> represents the current directory.</li>\n\t<li>A double period <code>&#39;..&#39;</code> represents the previous/parent directory.</li>\n\t<li>Multiple consecutive slashes such as <code>&#39;//&#39;</code> and <code>&#39;///&#39;</code> are treated as a single slash <code>&#39;/&#39;</code>.</li>\n\t<li>Any sequence of periods that does <strong>not match</strong> the rules above should be treated as a <strong>valid directory or</strong> <strong>file </strong><strong>name</strong>. For example, <code>&#39;...&#39; </code>and <code>&#39;....&#39;</code> are valid directory or file names.</li>\n</ul>\n\n<p>The simplified canonical path should follow these <em>rules</em>:</p>\n\n<ul>\n\t<li>The path must start with a single slash <code>&#39;/&#39;</code>.</li>\n\t<li>Directories within the path must be separated by exactly one slash <code>&#39;/&#39;</code>.</li>\n\t<li>The path must not end with a slash <code>&#39;/&#39;</code>, unless it is the root directory.</li>\n\t<li>The path must not have any single or double periods (<code>&#39;.&#39;</code> and <code>&#39;..&#39;</code>) used to denote current or parent directories.</li>\n</ul>\n\n<p>Return the <strong>simplified canonical path</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/home/&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/home&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The trailing slash should be removed.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/home//foo/&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/home/foo&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Multiple consecutive slashes are replaced by a single one.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/home/user/Documents/../Pictures&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/home/user/Pictures&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>A double period <code>&quot;..&quot;</code> refers to the directory up a level (the parent directory).</p>\n</div>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/../&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Going one level up from the root directory is not possible.</p>\n</div>\n\n<p><strong class=\"example\">Example 5:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">path = &quot;/.../a/../b/c/../d/./&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;/.../b/d&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><code>&quot;...&quot;</code> is a valid name for a directory in this problem.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= path.length &lt;= 3000</code></li>\n\t<li><code>path</code> consists of English letters, digits, period <code>&#39;.&#39;</code>, slash <code>&#39;/&#39;</code> or <code>&#39;_&#39;</code>.</li>\n\t<li><code>path</code> is a valid absolute Unix path.</li>\n</ul>\n",
  "difficulty": "Medium",
  "title": "Simplify Path",
  "topicTags": [
    {
      "name": "String"
    },
    {
      "name": "Stack"
    }
  ],
  "solution": {
    "content": null
  },
  "content_md": "You are given an *absolute* path for a Unix\\-style file system, which always begins with a slash `'/'`. Your task is to transform this absolute path into its **simplified canonical path**.\n\n\nThe *rules* of a Unix\\-style file system are as follows:\n\n\n* A single period `'.'` represents the current directory.\n* A double period `'..'` represents the previous/parent directory.\n* Multiple consecutive slashes such as `'//'` and `'///'` are treated as a single slash `'/'`.\n* Any sequence of periods that does **not match** the rules above should be treated as a **valid directory or** **file** **name**. For example, `'...'` and `'....'` are valid directory or file names.\n\n\nThe simplified canonical path should follow these *rules*:\n\n\n* The path must start with a single slash `'/'`.\n* Directories within the path must be separated by exactly one slash `'/'`.\n* The path must not end with a slash `'/'`, unless it is the root directory.\n* The path must not have any single or double periods (`'.'` and `'..'`) used to denote current or parent directories.\n\n\nReturn the **simplified canonical path**.\n\n\n \n\n\n**Example 1:**\n\n\n\n**Input:** path \\= \"/home/\"\n\n\n**Output:** \"/home\"\n\n\n**Explanation:**\n\n\nThe trailing slash should be removed.\n\n\n\n**Example 2:**\n\n\n\n**Input:** path \\= \"/home//foo/\"\n\n\n**Output:** \"/home/foo\"\n\n\n**Explanation:**\n\n\nMultiple consecutive slashes are replaced by a single one.\n\n\n\n**Example 3:**\n\n\n\n**Input:** path \\= \"/home/user/Documents/../Pictures\"\n\n\n**Output:** \"/home/user/Pictures\"\n\n\n**Explanation:**\n\n\nA double period `\"..\"` refers to the directory up a level (the parent directory).\n\n\n\n**Example 4:**\n\n\n\n**Input:** path \\= \"/../\"\n\n\n**Output:** \"/\"\n\n\n**Explanation:**\n\n\nGoing one level up from the root directory is not possible.\n\n\n\n**Example 5:**\n\n\n\n**Input:** path \\= \"/.../a/../b/c/../d/./\"\n\n\n**Output:** \"/.../b/d\"\n\n\n**Explanation:**\n\n\n`\"...\"` is a valid name for a directory in this problem.\n\n\n\n \n\n\n**Constraints:**\n\n\n* `1 <= path.length <= 3000`\n* `path` consists of English letters, digits, period `'.'`, slash `'/'` or `'_'`.\n* `path` is a valid absolute Unix path.\n\n\n",
  "solution_md": null
}