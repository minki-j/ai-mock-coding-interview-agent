{
  "content": "<p>You are given a string <code>s</code> and an array of strings <code>words</code>. All the strings of <code>words</code> are of <strong>the same length</strong>.</p>\n\n<p>A <strong>concatenated string</strong> is a string that exactly contains all the strings of any permutation of <code>words</code> concatenated.</p>\n\n<ul>\n\t<li>For example, if <code>words = [&quot;ab&quot;,&quot;cd&quot;,&quot;ef&quot;]</code>, then <code>&quot;abcdef&quot;</code>, <code>&quot;abefcd&quot;</code>, <code>&quot;cdabef&quot;</code>, <code>&quot;cdefab&quot;</code>, <code>&quot;efabcd&quot;</code>, and <code>&quot;efcdab&quot;</code> are all concatenated strings. <code>&quot;acdbef&quot;</code> is not a concatenated string because it is not the concatenation of any permutation of <code>words</code>.</li>\n</ul>\n\n<p>Return an array of <em>the starting indices</em> of all the concatenated substrings in <code>s</code>. You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;barfoothefoobarman&quot;, words = [&quot;foo&quot;,&quot;bar&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,9]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substring starting at 0 is <code>&quot;barfoo&quot;</code>. It is the concatenation of <code>[&quot;bar&quot;,&quot;foo&quot;]</code> which is a permutation of <code>words</code>.<br />\nThe substring starting at 9 is <code>&quot;foobar&quot;</code>. It is the concatenation of <code>[&quot;foo&quot;,&quot;bar&quot;]</code> which is a permutation of <code>words</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;wordgoodgoodgoodbestword&quot;, words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no concatenated substring.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;barfoofoobarthefoobarman&quot;, words = [&quot;bar&quot;,&quot;foo&quot;,&quot;the&quot;]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[6,9,12]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substring starting at 6 is <code>&quot;foobarthe&quot;</code>. It is the concatenation of <code>[&quot;foo&quot;,&quot;bar&quot;,&quot;the&quot;]</code>.<br />\nThe substring starting at 9 is <code>&quot;barthefoo&quot;</code>. It is the concatenation of <code>[&quot;bar&quot;,&quot;the&quot;,&quot;foo&quot;]</code>.<br />\nThe substring starting at 12 is <code>&quot;thefoobar&quot;</code>. It is the concatenation of <code>[&quot;the&quot;,&quot;foo&quot;,&quot;bar&quot;]</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n\t<li><code>s</code> and <code>words[i]</code> consist of lowercase English letters.</li>\n</ul>\n",
  "difficulty": "Hard",
  "title": "Substring with Concatenation of All Words",
  "topicTags": [
    {
      "name": "Hash Table"
    },
    {
      "name": "String"
    },
    {
      "name": "Sliding Window"
    }
  ],
  "solution": {
    "content": null
  },
  "content_md": "You are given a string `s` and an array of strings `words`. All the strings of `words` are of **the same length**.\n\n\nA **concatenated string** is a string that exactly contains all the strings of any permutation of `words` concatenated.\n\n\n* For example, if `words = [\"ab\",\"cd\",\"ef\"]`, then `\"abcdef\"`, `\"abefcd\"`, `\"cdabef\"`, `\"cdefab\"`, `\"efabcd\"`, and `\"efcdab\"` are all concatenated strings. `\"acdbef\"` is not a concatenated string because it is not the concatenation of any permutation of `words`.\n\n\nReturn an array of *the starting indices* of all the concatenated substrings in `s`. You can return the answer in **any order**.\n\n\n \n\n\n**Example 1:**\n\n\n\n**Input:** s \\= \"barfoothefoobarman\", words \\= \\[\"foo\",\"bar\"]\n\n\n**Output:** \\[0,9]\n\n\n**Explanation:**\n\n\nThe substring starting at 0 is `\"barfoo\"`. It is the concatenation of `[\"bar\",\"foo\"]` which is a permutation of `words`.  \n\nThe substring starting at 9 is `\"foobar\"`. It is the concatenation of `[\"foo\",\"bar\"]` which is a permutation of `words`.\n\n\n\n**Example 2:**\n\n\n\n**Input:** s \\= \"wordgoodgoodgoodbestword\", words \\= \\[\"word\",\"good\",\"best\",\"word\"]\n\n\n**Output:** \\[]\n\n\n**Explanation:**\n\n\nThere is no concatenated substring.\n\n\n\n**Example 3:**\n\n\n\n**Input:** s \\= \"barfoofoobarthefoobarman\", words \\= \\[\"bar\",\"foo\",\"the\"]\n\n\n**Output:** \\[6,9,12]\n\n\n**Explanation:**\n\n\nThe substring starting at 6 is `\"foobarthe\"`. It is the concatenation of `[\"foo\",\"bar\",\"the\"]`.  \n\nThe substring starting at 9 is `\"barthefoo\"`. It is the concatenation of `[\"bar\",\"the\",\"foo\"]`.  \n\nThe substring starting at 12 is `\"thefoobar\"`. It is the concatenation of `[\"the\",\"foo\",\"bar\"]`.\n\n\n\n \n\n\n**Constraints:**\n\n\n* `1 <= s.length <= 104`\n* `1 <= words.length <= 5000`\n* `1 <= words[i].length <= 30`\n* `s` and `words[i]` consist of lowercase English letters.\n\n\n",
  "solution_md": null
}